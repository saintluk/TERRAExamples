/* ---------------------------------------------------------------------------
** This software is made for using in combination with the FMI component in 
** Terra. 
**
** logging.cpp
** This file contains the definitions of the log funtions which are used by
** by the FMI component in TERRA. In total when using these functions, two 
** different files are generated. One file contains information about the 
** status of the FMI. The other file contains the values which are send through 
** the FMI.
**
** Author: K.J. Kok
** Version: 1.0 (27-05-16)
** Author: Z.Lu
** Version: 2.0 (20-04-17)
** -------------------------------------------------------------------------*/

#pragma once

#include <iostream>
#include <cstring>

#include "fmi2FunctionTypes.h"

class FMILogger_LevelController{

	public:
		FMILogger_LevelController();
		~FMILogger_LevelController();
		/**
			This function needs to be called first before the other functions can be called. It saves the filenames for the different
			files and generate the .csv file for the measurements where the first line contains the names of the quanties which are
			saved during the simulation.

			@param fileNameSimulationLog The name for the file with the measurement values of the simulations.
			@param fileNameSystemLog The name for the file with information about the status of the FMI.
			@param quantityNames A vector with the names of the quantities which are saved during the simultion.
		**/
		static void initLogger(std::string fileNameSimulationLog, std::string fileNameSystemLog,std::string measurementNames);

		/**
			This function is used by the generated FMU for logging the status information of the FMI.

			@param componentEnvironment The name of the environment of the FMI
			@param instanceName The name of the FMI
			@param status The status of the FMI
			@param category The category of the notific
			@param message The message which is generated by the FMI
			@param ... The extra parameters which are used to form the message
		**/
		static void fmiLog(fmi2ComponentEnvironment componentEnvironment, fmi2String instanceName, fmi2Status status, fmi2String category, fmi2String message, ...);

		/**
			This function can be used by the FMI component to save some measurement points which are send to and from the FMI

			@param measurementValues The values of the quantities which are send to and from the FMI
		**/
		static void saveMeasurementPoint(std::string measurementValues);

		/**
			This function is used to transform the status of the FMI, which is original an item of a enumeration, to the corresponding
			text written status
	
			@param status The status of the FMI which need to be transformed
		**/
		static fmi2String enumStatusToString(fmi2Status status);

	private:
		static std::string _fileNameSimulationLog;	// filename of the file with the measurements
		static std::string _fileNameSystemLog;	// filename of the file with the system log information
};



